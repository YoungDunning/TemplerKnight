FUNCTION_BLOCK knight	
	VAR_INPUT				// Define input variables
		hit : REAL;
		opponent : REAL;
	END_VAR
	
	VAR_OUTPUT				// Define output variable
		life : REAL;
	END_VAR
	
	FUZZIFY hit			// Fuzzify input variable 'hit': {'poor', 'good' , 'excellent'}
		TERM poor := (0, 1) (4, 0) ; 
		TERM decent := (1, 0) (4,1) (6,1) (9,0);
		TERM excellent := (6, 0) (9, 1);
	END_FUZZIFY
	
	FUZZIFY opponent			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
		TERM low := (0, 1) (1, 1) (3,0);
		TERM high := (7,0) (9,1);
	END_FUZZIFY
	
	DEFUZZIFY life		// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
		TERM high := (0,0) (5,1) (10,0);
		TERM average := (10,0) (15,1) (20,0);
		TERM poor := (20,0) (25,1) (30,0);
		METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
		DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
	END_DEFUZZIFY
	
	RULEBLOCK No1
		AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
		ACT : MIN;			// Use 'min' activation method
		ACCU : MAX;			// Use 'max' accumulation method
	
		RULE 1 : IF hit IS poor AND opponent IS high THEN life IS high;
		RULE 2 : IF hit IS decent AND opponent is high THEN life IS average; 
		RULE 3 : IF hit IS excellent AND opponent is low THEN life IS poor;
	END_RULEBLOCK

END_FUNCTION_BLOCK